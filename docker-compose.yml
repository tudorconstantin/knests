version: "3.5"

services:
  client:    
    image: "${CI_REGISTRY:-registry.gitlab.prforge.com}/${CI_PROJECT_PATH:-tudor/knests}/client:${CI_COMMIT_SHORT_SHA:-latest}"
    ports:
      - "${SERVICE_PORT:-8080}"
    volumes:
      - /data/node_modules/
      - /data/dist/
    environment: 
      - API_URL=server
      - PORT=8080

    depends_on:
       - server    
    restart: unless-stopped
    deploy:
      update_config:
        order: stop-first
      labels:
        - traefik.frontend.rule=Host:${EXTERNAL_URL:-knests-staging.prforge.com}
        - traefik.enable=true
        - traefik.port=${SERVICE_PORT:-8080}
        - traefik.tags=${TRAEFIK_PUBLIC_TAG:-traefik-public}
        - traefik.docker.network=traefik-public
        # Traefik service that listens to HTTP
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.webservice.frontend.entryPoints=https

  server:
    image: "${CI_REGISTRY:-registry.gitlab.prforge.com}/${CI_PROJECT_PATH:-tudor/knests}/server:${CI_COMMIT_SHORT_SHA:-latest}"
    volumes:
      - /home/node/node_modules/
    depends_on:
      - postgres
    restart: unless-stopped
    environment:
      DATABASE_URL: postgres://admin:5UPP3rSecr3tPAssword@postgres:5432/knests
      PORT: 8081
    deploy:
      update_config:
        order: stop-first

  postgres:
    image: postgres:14.2
    

